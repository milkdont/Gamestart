generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Profile {
  id String @id @default(uuid()) @map("_id")
  userId String @unique
  name String
  imageUrl String 
  email String 

  server Server[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  channel Channel[]

  member Member[]
}

model Server {
  id         String   @id @default(uuid()) @map("_id")
  name       String
  imageUrl   String   
  inviteCode String   @unique

  profileId  String
  profile    Profile  @relation(fields: [profileId], references: [id], onDelete: Cascade)

  member Member[]
  channels Channel[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@index([profileId])
}

enum MemberRole {
  ADMIN
  MODERATOR
  GUEST
}

model Member {
  id   String     @id @default(uuid()) @map("_id")
  role MemberRole @default(GUEST)

  profileId String
  profile Profile @relation(fields: [profileId], references:[id], onDelete: Cascade)

  serverId String
  server Server @relation(fields: [serverId], references:[id], onDelete: Cascade)
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([profileId])
  @@index([serverId])
}

enum ChannelType{
  TEXT
  AUDIO
  VIDEO
}

model Channel {
  id        String      @id @default(uuid()) @map("_id")
  name      String
  type      ChannelType @default(TEXT)

  profileId String
  profile   Profile     @relation(fields: [profileId], references: [id], onDelete: Cascade)

  serverId  String
  server    Server      @relation(fields: [serverId], references: [id], onDelete: Cascade)

  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt

  @@index([profileId])
  @@index([serverId])
}
